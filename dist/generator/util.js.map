{"version":3,"sources":["generator/src/util.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAI,QAAO,GAAG,OAAO,CAAC,gBAAgB,CAAC;;;AAAC;IAC3B,IAAI,WAAJ,IAAI;aAAJ,IAAI;4CAAJ,IAAI;;;+BAAJ,IAAI;;mCACK,MAAM,EAAE;AACtB,mBAAO,IAAI,CAAC,KAAK,CAAC,yBAAe,MAAM,CAAC,CAAC,CAAC;SAC7C;;;gCACc,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE;AAC7B,mBAAO,QAAO,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;SACpC;;;2CACyB,KAAK,EAAE;AAC7B,eAAG,CAAC,GAAG,SAAO,KAAK,CAAC,IAAI,SAAM,KAAK,CAAC,OAAO,CAAC,CAAC;AAC7C,mBAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACpB;;;6CAC2B,OAAO,EAAE;AACjC,eAAG,CAAC,GAAG,eAAe,OAAO,CAAC,CAAC;AAC/B,mBAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACpB;;;sCACoB;AACjB,mBAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACnB;;WAjBQ,IAAI;;;IAmBJ,GAAG,WAAH,GAAG;aAAH,GAAG;4CAAH,GAAG;;;+BAAH,GAAG;;6BACA,GAAG,EAAE,OAAO,EAAE;AACtB,mBAAO,CAAC,GAAG,MAAI,WAvBG,IAAI,EAuBG,GAAG,CAAC,GAAG,OAAO,CAAG,CAAC;SAC9C;;;4BACU,GAAG,EAAE,OAAO,EAAE;AACrB,mBAAO,CAAC,GAAG,MAAI,WA1Bd,GAAG,EA0BoB,GAAG,CAAC,GAAG,OAAO,CAAG,CAAC;SAC7C;;;8BACY,GAAG,EAAE,OAAO,EAAE;AACvB,mBAAO,CAAC,GAAG,MAAI,WA7BsB,KAAK,EA6BhB,GAAG,CAAC,GAAG,OAAO,CAAG,CAAC;SAC/C;;;+BACa,GAAG,EAAE,OAAO,EAAE;AACxB,mBAAO,CAAC,GAAG,MAAI,WAhC2C,MAAM,EAgCrC,GAAG,CAAC,GAAG,OAAO,CAAG,CAAC;SAChD;;;gCACc,GAAG,EAAE,OAAO,EAAE;AACzB,mBAAO,CAAC,GAAG,MAAI,WAnCkE,OAAO,EAmC5D,GAAG,CAAC,GAAG,OAAO,CAAG,CAAC;SACjD;;;oCACkB,GAAG,EAAE,OAAO,EAAE;AAC7B,mBAAO,CAAC,GAAG,MAAI,GAAG,GAAG,WAtCH,IAAI,EAsCS,OAAO,CAAC,CAAG,CAAC;SAC9C;;;mCACiB,GAAG,EAAE,OAAO,EAAE;AAC5B,mBAAO,CAAC,GAAG,MAAI,GAAG,GAAG,WAzCpB,GAAG,EAyC0B,OAAO,CAAC,CAAG,CAAC;SAC7C;;;qCACmB,GAAG,EAAE,OAAO,EAAE;AAC9B,mBAAO,CAAC,GAAG,MAAI,GAAG,GAAG,WA5CgB,KAAK,EA4CV,OAAO,CAAC,CAAG,CAAC;SAC/C;;;sCACoB,GAAG,EAAE,OAAO,EAAE;AAC/B,mBAAO,CAAC,GAAG,MAAI,GAAG,GAAG,WA/CqC,MAAM,EA+C/B,OAAO,CAAC,CAAG,CAAC;SAChD;;;uCACqB,GAAG,EAAE,OAAO,EAAE;AAChC,mBAAO,CAAC,GAAG,MAAI,GAAG,GAAG,WAlD4D,OAAO,EAkDtD,OAAO,CAAC,CAAG,CAAC;SACjD;;WA9BQ,GAAG","file":"generator/src/util.js","sourcesContent":["/// <reference path=\"../../typings/node/node.d.ts\" />\n/// <reference path=\"../../typings/chalk/chalk.d.ts\" />\n/// <reference path=\"../../typings/lodash/lodash.d.ts\" />\nimport { red as chalkRed, blue as chalkBlue, green as chalkGreen, yellow as chalkYellow, magenta as chalkMagenta } from \"chalk\";\nlet unionBy = require('lodash.unionby');\nexport class Util {\n    static copyObject(object) {\n        return JSON.parse(JSON.stringify(object));\n    }\n    static unionBy(ts1, ts2, filter) {\n        return unionBy(ts1, ts2, filter);\n    }\n    static reportErrorAndExit(error) {\n        Log.red(`  [${error.name}]:`, error.message);\n        process.exit(-1);\n    }\n    static reportMessageAndExit(message) {\n        Log.red(`  [ERROR]:`, message);\n        process.exit(-1);\n    }\n    static exitProcess() {\n        process.exit(1);\n    }\n}\nexport class Log {\n    static blue(tag, message) {\n        console.log(`${chalkBlue(tag)}${message}`);\n    }\n    static red(tag, message) {\n        console.log(`${chalkRed(tag)}${message}`);\n    }\n    static green(tag, message) {\n        console.log(`${chalkGreen(tag)}${message}`);\n    }\n    static yellow(tag, message) {\n        console.log(`${chalkYellow(tag)}${message}`);\n    }\n    static magenta(tag, message) {\n        console.log(`${chalkMagenta(tag)}${message}`);\n    }\n    static blueReverse(tag, message) {\n        console.log(`${tag}${chalkBlue(message)}`);\n    }\n    static redReverse(tag, message) {\n        console.log(`${tag}${chalkRed(message)}`);\n    }\n    static greenReverse(tag, message) {\n        console.log(`${tag}${chalkGreen(message)}`);\n    }\n    static yellowReverse(tag, message) {\n        console.log(`${tag}${chalkYellow(message)}`);\n    }\n    static magentaReverse(tag, message) {\n        console.log(`${tag}${chalkMagenta(message)}`);\n    }\n}\n"],"sourceRoot":"/source/"}