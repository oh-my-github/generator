{"version":3,"sources":["generator/src/command.js"],"names":[],"mappings":"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","file":"generator/src/command.js","sourcesContent":["/// <reference path=\"../../typings/node/node.d.ts\" />\n/// <reference path=\"../../typings/lodash/lodash.d.ts\" />\n/// <reference path=\"../../typings/fs-extra/fs-extra.d.ts\" />\n/// <reference path=\"../../typings/commander/commander.d.ts\" />\n/// <reference path=\"../../typings/circular-json/circular-json.d.ts\" />\n\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, Promise, generator) {\n    return new Promise(function (resolve, reject) {\n        generator = generator.call(thisArg, _arguments);\n        function cast(value) { return value instanceof Promise && value.constructor === Promise ? value : new Promise(function (resolve) { resolve(value); }); }\n        function onfulfill(value) { try { step(\"next\", value); } catch (e) { reject(e); } }\n        function onreject(value) { try { step(\"throw\", value); } catch (e) { reject(e); } }\n        function step(verb, value) {\n            var result = generator[verb](value);\n            result.done ? resolve(result.value) : cast(result.value).then(onfulfill, onreject);\n        }\n        step(\"next\", void 0);\n    });\n};\nimport * as CircularJSON from \"circular-json\";\nlet path = require(\"path\");\nlet browserSync = require(\"browser-sync\");\nconst bs = browserSync.create();\nimport { BS_OPTION } from \"./file_util\";\nimport { publish } from \"./nodegit_util\";\nimport { FileUtil, GENERATOR_VERSION, FILE_PATH_PROFILE_TEMPLATE_JSON } from \"./file_util\";\nimport { deserialize, deserializeAs, Deserializable } from \"./serialize\";\nimport { Profile, createProfile } from \"./profile\";\nimport { Util } from \"./util\";\nexport class OptionSetting {\n    constructor(specifiers, description) {\n        this.specifiers = specifiers;\n        this.description = description;\n    }\n}\nexport class GenerateOptions {\n}\nGenerateOptions.GENERATE_OPTION_SPECIFIER_IGNORE_REPOS = \"-i, --ignore [repository]\";\nGenerateOptions.GENERATE_OPTION_IGNORE_REPOS = new OptionSetting(GenerateOptions.GENERATE_OPTION_SPECIFIER_IGNORE_REPOS, \"ignore specified repositories\");\nexport class CommandSetting {\n    constructor(specifiers, description, action, alias) {\n        this.specifiers = specifiers;\n        this.description = description;\n        this.action = action;\n        this.alias = alias;\n    }\n}\nCommandSetting.COMMAND_INIT = new CommandSetting(`init <user> <repo>`, \"initialize `oh-my-github.json`\", function (user, repo) {\n    try {\n        let profPath = FileUtil.getProfilePath();\n        let prof = Profile.deserialize(Profile, FileUtil.readFileIfExist(FILE_PATH_PROFILE_TEMPLATE_JSON));\n        prof._$meta.github_repository = repo;\n        prof._$meta.github_user = user;\n        FileUtil.writeFileIfNotExist(profPath, prof);\n        Util.exitProcess();\n    }\n    catch (error) {\n        Util.reportErrorAndExit(error);\n    }\n});\nCommandSetting.COMMAND_GENERATE = new CommandSetting(`generate <token>`, \"fill `oh-my-github.json` using github API\", function (token, options) {\n    let profPath = null;\n    let prevProf = null;\n    try {\n        profPath = FileUtil.getProfilePath();\n        prevProf = FileUtil.readFileIfExist(profPath);\n    }\n    catch (error) {\n        Util.reportErrorAndExit(error);\n    }\n    createProfile(token, prevProf, options.ignore)\n        .then(currentProf => {\n        FileUtil.overwriteFile(profPath, currentProf);\n        Util.exitProcess();\n    })\n        .catch(error => { Util.reportErrorAndExit(error); });\n});\nCommandSetting.COMMAND_PREVIEW = new CommandSetting(`preview`, \"preview your github profile\", () => {\n    /** assert if a profile json exists */\n    try {\n        FileUtil.readFileIfExist(FileUtil.getProfilePath());\n        bs.init(BS_OPTION);\n    }\n    catch (error) {\n        Util.reportErrorAndExit(error);\n    }\n});\nCommandSetting.COMMAND_PUBLISH = new CommandSetting(`publish`, \"publish gh-pages using the generated profile\", () => {\n    try {\n        let profPath = FileUtil.getProfilePath();\n        let profile = FileUtil.readFileIfExist(profPath);\n        let user = profile._$meta.github_user;\n        let repo = profile._$meta.github_repository;\n        if (!user || user === \"\")\n            Util.reportMessageAndExit(`invalid user name \\`${user}\\``);\n        if (!repo || repo === \"\")\n            Util.reportMessageAndExit(`invalid repo name \\`${repo}\\``);\n        publish(user, repo)\n            .then(() => Util.exitProcess())\n            .catch(error => console.log(error));\n    }\n    catch (error) {\n        Util.reportErrorAndExit(error);\n    }\n});\nexport class ParsedOption {\n}\n__decorate([\n    deserialize\n], ParsedOption.prototype, \"flags\", void 0);\n__decorate([\n    deserialize\n], ParsedOption.prototype, \"required\", void 0);\n__decorate([\n    deserialize\n], ParsedOption.prototype, \"optional\", void 0);\n__decorate([\n    deserialize\n], ParsedOption.prototype, \"bool\", void 0);\n__decorate([\n    deserialize\n], ParsedOption.prototype, \"short\", void 0);\n__decorate([\n    deserialize\n], ParsedOption.prototype, \"long\", void 0);\n__decorate([\n    deserialize\n], ParsedOption.prototype, \"description\", void 0);\nexport class ParsedCommand extends Deserializable {\n}\n__decorate([\n    deserializeAs(\"_name\")\n], ParsedCommand.prototype, \"name\", void 0);\n__decorate([\n    deserializeAs(\"_description\")\n], ParsedCommand.prototype, \"description\", void 0);\n__decorate([\n    deserializeAs(ParsedCommand)\n], ParsedCommand.prototype, \"commands\", void 0);\n__decorate([\n    deserializeAs(ParsedOption)\n], ParsedCommand.prototype, \"options\", void 0);\nexport class CommandFactory {\n    static create(argv) {\n        let parser = require(\"commander\");\n        const PROGRAM_NAME = \"omg\";\n        process.title = PROGRAM_NAME;\n        parser._name = PROGRAM_NAME;\n        parser.version(GENERATOR_VERSION);\n        parser\n            .command(CommandSetting.COMMAND_INIT.specifiers)\n            .description(CommandSetting.COMMAND_INIT.description)\n            .action(CommandSetting.COMMAND_INIT.action);\n        parser\n            .command(CommandSetting.COMMAND_GENERATE.specifiers)\n            .description(CommandSetting.COMMAND_GENERATE.description)\n            .option(GenerateOptions.GENERATE_OPTION_IGNORE_REPOS.specifiers, GenerateOptions.GENERATE_OPTION_IGNORE_REPOS.description, (val, memo) => { memo.push(val); return memo; }, [])\n            .action(CommandSetting.COMMAND_GENERATE.action);\n        parser\n            .command(CommandSetting.COMMAND_PREVIEW.specifiers)\n            .description(CommandSetting.COMMAND_PREVIEW.description)\n            .action(CommandSetting.COMMAND_PREVIEW.action);\n        parser\n            .command(CommandSetting.COMMAND_PUBLISH.specifiers)\n            .description(CommandSetting.COMMAND_PUBLISH.description)\n            .action(CommandSetting.COMMAND_PUBLISH.action);\n        parser\n            .on(\"--help\", () => {\n            console.log(\"  Examples:\");\n            console.log(\"\");\n            console.log(\"    $ omg init 1ambda oh-my-github\");\n            console.log(\"    $ omg generate 1b94910adb394014939fal1bfd193bfd762c4191\");\n            console.log(\"    $ omg preview\");\n            console.log(\"    $ omg publish\");\n            console.log(\"\");\n        });\n        parser\n            .command(\"*\")\n            .action((command) => {\n            console.log(\"\");\n            Util.reportMessageAndExit(`unknown command: ${command}\\n`);\n        });\n        /** use circular-json to avoid cyclic references */\n        let serialized = CircularJSON.stringify(parser.parse(argv));\n        let circularDeserialized = CircularJSON.parse(serialized);\n        let deserialized = ParsedCommand.deserialize(ParsedCommand, circularDeserialized);\n        return deserialized;\n    }\n}\n"],"sourceRoot":"/source/"}