{"version":3,"sources":["generator/src/file_util.js"],"names":[],"mappings":";;;AAGA;;;;;;;;;;;;AACA,IAAM,MAAM,QAAQ,UAAR,CAAN;AACN,IAAI,OAAO,QAAQ,MAAR,CAAP;AACJ,IAAI,aAAa,QAAQ,eAAR,EAAyB,IAAzB;;AAEjB,IAAI,WAAW,QAAX,CAAoB,MAApB,CAAJ,EACI,aAAa,WAAW,SAAX,CAAqB,CAArB,EAAwB,WAAW,MAAX,GAAoB,CAApB,CAArC,CADJ;AAEA,QAAQ,WAAR,GAAsB,UAAtB;AACA,QAAQ,MAAR,GAAiB,QAAQ,KAAK,IAAL,CAAU,QAAQ,WAAR,EAAqB,WAA/B,CAAR,CAAjB;AACA,QAAQ,iBAAR,GAA4B,QAAQ,KAAK,IAAL,CAAU,QAAQ,WAAR,EAAqB,QAAQ,MAAR,CAAe,IAAf,CAAoB,YAApB,CAAvC,EAA0E,OAA1E;AAC5B,QAAQ,+BAAR,GAA0C,KAAK,IAAL,CAAU,QAAQ,WAAR,EAAqB,QAAQ,MAAR,CAAe,IAAf,CAAoB,qBAApB,CAAzE;AACA,QAAQ,sBAAR,GAAiC,QAAQ,MAAR,CAAe,IAAf,CAAoB,YAApB;AACjC,QAAQ,SAAR,GAAoB,EAAE,QAAQ;AACtB,iBAAS,CAAI,QAAQ,WAAR,SAAuB,QAAQ,MAAR,CAAe,GAAf,CAAmB,WAAnB,CAApC;AACA,gBAAQ,EAAE,iBAAiB,QAAQ,GAAR,EAAjB,EAAV;KAFc,EAAtB;;IAIM;;;;;;;;;;;4CAIyB,MAAM,MAAM;AACnC,gBAAI,aAAJ,CAAkB,IAAlB,EAAwB,IAAxB,EAA8B,EAAE,MAAM,IAAN,EAAhC,EADmC;;;;;;;;sCAMlB,MAAM,MAAM;AAC7B,gBAAI,aAAJ,CAAkB,IAAlB,EAAwB,IAAxB,EAA8B,EAAE,MAAM,IAAN,EAAhC,EAD6B;;;;;;;;wCAMV,MAAM;AACzB,mBAAO,IAAI,YAAJ,CAAiB,IAAjB,EAAuB,EAAE,MAAM,GAAN,EAAzB,CAAP,CADyB;;;;yCAGL;AACpB,mBAAO,SAAS,kBAAT,CAA4B,QAAQ,sBAAR,CAAnC,CADoB;;;;2CAGE,UAAU;AAChC,mBAAO,KAAK,IAAL,CAAU,QAAQ,GAAR,EAAV,EAAyB,QAAzB,CAAP,CADgC;;;WAtBlC;;;AA0BN,QAAQ,QAAR,GAAmB,QAAnB","file":"generator/src/file_util.js","sourcesContent":["/// <reference path=\"../../typings/node/node.d.ts\" />\n/// <reference path=\"../../typings/lodash/lodash.d.ts\" />\n/// <reference path=\"../../typings/fs-extra/fs-extra.d.ts\" />\n\"use strict\";\nconst fse = require(\"fs-extra\");\nlet path = require(\"path\");\nlet projectDir = require('app-root-path').path;\n/** since globally installed version runs on `oh-my-github/bin` we should remove `/bin` */\nif (projectDir.endsWith(\"/bin\"))\n    projectDir = projectDir.substring(0, projectDir.length - 4);\nexports.PROJECT_DIR = projectDir;\nexports.CONFIG = require(path.join(exports.PROJECT_DIR, \"config.js\"));\nexports.GENERATOR_VERSION = require(path.join(exports.PROJECT_DIR, exports.CONFIG.FILE.PACKAGE_JSON)).version;\nexports.FILE_PATH_PROFILE_TEMPLATE_JSON = path.join(exports.PROJECT_DIR, exports.CONFIG.FILE.PROFILE_TEMPLATE_JSON);\nexports.FILE_NAME_PROFILE_JSON = exports.CONFIG.FILE.PROFILE_JSON;\nexports.BS_OPTION = { server: {\n        baseDir: [`${exports.PROJECT_DIR}/${exports.CONFIG.DIR.DIST_VIEWER}`],\n        routes: { \"/oh-my-github\": process.cwd() }\n    } };\nclass FileUtil {\n    /**\n     * write file iff the file does not exist otherwise throw an error\n     */\n    static writeFileIfNotExist(path, json) {\n        fse.writeJsonSync(path, json, { flag: \"wx\" });\n    }\n    /**\n     * overwrite file\n     */\n    static overwriteFile(path, json) {\n        fse.writeJsonSync(path, json, { flag: \"w+\" });\n    }\n    /**\n     * read file iff the file exists otherwise throw an error\n     */\n    static readFileIfExist(path) {\n        return fse.readJsonSync(path, { flag: \"r\" });\n    }\n    static getProfilePath() {\n        return FileUtil.combinePathWithCwd(exports.FILE_NAME_PROFILE_JSON);\n    }\n    static combinePathWithCwd(filePath) {\n        return path.join(process.cwd(), filePath);\n    }\n}\nexports.FileUtil = FileUtil;\n"],"sourceRoot":"/source/"}