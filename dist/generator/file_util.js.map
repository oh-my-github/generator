{"version":3,"sources":["generator/src/file_util.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;IAGY,GAAG;;;;;;AACf,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;;;AAAC;AAC3B,IAAI,UAAU,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI;;AAAC,AAE/C,IAAI,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,EAC3B,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACzD,IAAM,WAAW,WAAX,WAAW,GAAG,UAAU,CAAC;AAC/B,IAAM,MAAM,WAAN,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC;AAC5D,IAAM,iBAAiB,WAAjB,iBAAiB,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC;AAC5F,IAAM,+BAA+B,WAA/B,+BAA+B,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;AAClG,IAAM,sBAAsB,WAAtB,sBAAsB,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;AACxD,IAAM,SAAS,WAAT,SAAS,GAAG,EAAE,MAAM,EAAE;AAC3B,eAAO,EAAE,CAAI,WAAW,SAAI,MAAM,CAAC,GAAG,CAAC,WAAW,CAAG;AACrD,cAAM,EAAE;AACJ,+BAAmB,EAAK,WAAW,SAAI,MAAM,CAAC,GAAG,CAAC,gBAAgB,MAAG;AACrE,uBAAW,EAAE,OAAO,CAAC,GAAG,EAAE;SAC7B;KACJ,EAAE,CAAC;;IACK,QAAQ,WAAR,QAAQ;aAAR,QAAQ;4CAAR,QAAQ;;;+BAAR,QAAQ;;;;;;4CAIU,IAAI,EAAE,IAAI,EAAE;AACnC,eAAG,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;SACjD;;;;;;;sCAIoB,IAAI,EAAE,IAAI,EAAE;AAC7B,eAAG,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;SACjD;;;;;;;wCAIsB,IAAI,EAAE;AACzB,mBAAO,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;SAChD;;;yCACuB;AACpB,mBAAO,QAAQ,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,CAAC;SAC9D;;;2CACyB,QAAQ,EAAE;AAChC,mBAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC;SAC7C;;WAxBQ,QAAQ","file":"generator/src/file_util.js","sourcesContent":["/// <reference path=\"../../typings/node/node.d.ts\" />\n/// <reference path=\"../../typings/lodash/lodash.d.ts\" />\n/// <reference path=\"../../typings/fs-extra/fs-extra.d.ts\" />\nimport * as fse from \"fs-extra\";\nlet path = require(\"path\");\nlet projectDir = require('app-root-path').path;\n/** since globally installed version runs on `oh-my-github/bin` we should remove `/bin` */\nif (projectDir.endsWith(\"/bin\"))\n    projectDir = projectDir.substring(0, projectDir.length - 4);\nexport const PROJECT_DIR = projectDir;\nexport const CONFIG = require(path.join(PROJECT_DIR, \"config.js\"));\nexport const GENERATOR_VERSION = require(path.join(PROJECT_DIR, CONFIG.FILE.PACKAGE_JSON)).version;\nexport const FILE_PATH_PROFILE_TEMPLATE_JSON = path.join(PROJECT_DIR, CONFIG.FILE.PROFILE_TEMPLATE_JSON);\nexport const FILE_NAME_PROFILE_JSON = CONFIG.FILE.PROFILE_JSON;\nexport const BS_OPTION = { server: {\n        baseDir: [`${PROJECT_DIR}/${CONFIG.DIR.DIST_VIEWER}`],\n        routes: {\n            \"/bower_components\": `${PROJECT_DIR}/${CONFIG.DIR.BOWER_COMPONENTS}/`,\n            \"/resource\": process.cwd()\n        }\n    } };\nexport class FileUtil {\n    /**\n     * write file iff the file does not exist otherwise throw an error\n     */\n    static writeFileIfNotExist(path, json) {\n        fse.writeJsonSync(path, json, { flag: \"wx\" });\n    }\n    /**\n     * overwrite file\n     */\n    static overwriteFile(path, json) {\n        fse.writeJsonSync(path, json, { flag: \"w+\" });\n    }\n    /**\n     * read file iff the file exists otherwise throw an error\n     */\n    static readFileIfExist(path) {\n        return fse.readJsonSync(path, { flag: \"r\" });\n    }\n    static getProfilePath() {\n        return FileUtil.combinePathWithCwd(FILE_NAME_PROFILE_JSON);\n    }\n    static combinePathWithCwd(filePath) {\n        return path.join(process.cwd(), filePath);\n    }\n}\n"],"sourceRoot":"/source/"}