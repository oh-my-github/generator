{"version":3,"sources":["generator/src/file_util.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;IAGY;;;;;;AACZ,IAAI,OAAO,QAAQ,MAAR,CAAP;;;;AACJ,IAAI,aAAa,QAAQ,eAAR,EAAyB,IAAzB;;AAEjB,IAAI,WAAW,QAAX,CAAoB,MAApB,CAAJ,EACI,aAAa,WAAW,SAAX,CAAqB,CAArB,EAAwB,WAAW,MAAX,GAAoB,CAApB,CAArC,CADJ;AAEO,IAAM,oCAAc,UAAd;AACN,IAAM,0BAAS,QAAQ,KAAK,IAAL,CAAU,WAAV,EAAuB,WAAvB,CAAR,CAAT;AACN,IAAM,gDAAoB,QAAQ,KAAK,IAAL,CAAU,WAAV,EAAuB,OAAO,IAAP,CAAY,YAAZ,CAA/B,EAA0D,OAA1D;AAC1B,IAAM,4EAAkC,KAAK,IAAL,CAAU,WAAV,EAAuB,OAAO,IAAP,CAAY,qBAAZ,CAAzD;AACN,IAAM,0DAAyB,OAAO,IAAP,CAAY,YAAZ;AAC/B,IAAM,gCAAY,EAAE,QAAQ;AAC3B,iBAAS,CAAI,oBAAe,OAAO,GAAP,CAAW,WAAX,CAA5B;AACA,gBAAQ,EAAE,iBAAiB,QAAQ,GAAR,EAAjB,EAAV;KAFmB,EAAd;;IAIA;;;;;;;;;;;4CAIkB,MAAM,MAAM;AACnC,gBAAI,aAAJ,CAAkB,IAAlB,EAAwB,IAAxB,EAA8B,EAAE,MAAM,IAAN,EAAhC,EADmC;;;;;;;;sCAMlB,MAAM,MAAM;AAC7B,gBAAI,aAAJ,CAAkB,IAAlB,EAAwB,IAAxB,EAA8B,EAAE,MAAM,IAAN,EAAhC,EAD6B;;;;;;;;wCAMV,MAAM;AACzB,mBAAO,IAAI,YAAJ,CAAiB,IAAjB,EAAuB,EAAE,MAAM,GAAN,EAAzB,CAAP,CADyB;;;;yCAGL;AACpB,mBAAO,SAAS,kBAAT,CAA4B,sBAA5B,CAAP,CADoB;;;;2CAGE,UAAU;AAChC,mBAAO,KAAK,IAAL,CAAU,QAAQ,GAAR,EAAV,EAAyB,QAAzB,CAAP,CADgC;;;WAtB3B","file":"generator/src/file_util.js","sourcesContent":["/// <reference path=\"../../typings/node/node.d.ts\" />\n/// <reference path=\"../../typings/lodash/lodash.d.ts\" />\n/// <reference path=\"../../typings/fs-extra/fs-extra.d.ts\" />\nimport * as fse from \"fs-extra\";\nlet path = require(\"path\");\nlet projectDir = require('app-root-path').path;\n/** since globally installed version runs on `oh-my-github/bin` we should remove `/bin` */\nif (projectDir.endsWith(\"/bin\"))\n    projectDir = projectDir.substring(0, projectDir.length - 4);\nexport const PROJECT_DIR = projectDir;\nexport const CONFIG = require(path.join(PROJECT_DIR, \"config.js\"));\nexport const GENERATOR_VERSION = require(path.join(PROJECT_DIR, CONFIG.FILE.PACKAGE_JSON)).version;\nexport const FILE_PATH_PROFILE_TEMPLATE_JSON = path.join(PROJECT_DIR, CONFIG.FILE.PROFILE_TEMPLATE_JSON);\nexport const FILE_NAME_PROFILE_JSON = CONFIG.FILE.PROFILE_JSON;\nexport const BS_OPTION = { server: {\n        baseDir: [`${PROJECT_DIR}/${CONFIG.DIR.DIST_VIEWER}`],\n        routes: { \"/oh-my-github\": process.cwd() }\n    } };\nexport class FileUtil {\n    /**\n     * write file iff the file does not exist otherwise throw an error\n     */\n    static writeFileIfNotExist(path, json) {\n        fse.writeJsonSync(path, json, { flag: \"wx\" });\n    }\n    /**\n     * overwrite file\n     */\n    static overwriteFile(path, json) {\n        fse.writeJsonSync(path, json, { flag: \"w+\" });\n    }\n    /**\n     * read file iff the file exists otherwise throw an error\n     */\n    static readFileIfExist(path) {\n        return fse.readJsonSync(path, { flag: \"r\" });\n    }\n    static getProfilePath() {\n        return FileUtil.combinePathWithCwd(FILE_NAME_PROFILE_JSON);\n    }\n    static combinePathWithCwd(filePath) {\n        return path.join(process.cwd(), filePath);\n    }\n}\n"],"sourceRoot":"/source/"}