{"version":3,"sources":["generator/src/github_util.js"],"names":[],"mappings":"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","file":"generator/src/github_util.js","sourcesContent":["/// <reference path=\"../../typings/node/node.d.ts\" />\n/// <reference path=\"../../typings/lodash/lodash.d.ts\" />\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, Promise, generator) {\n    return new Promise(function (resolve, reject) {\n        generator = generator.call(thisArg, _arguments);\n        function cast(value) { return value instanceof Promise && value.constructor === Promise ? value : new Promise(function (resolve) { resolve(value); }); }\n        function onfulfill(value) { try { step(\"next\", value); } catch (e) { reject(e); } }\n        function onreject(value) { try { step(\"throw\", value); } catch (e) { reject(e); } }\n        function step(verb, value) {\n            var result = generator[verb](value);\n            result.done ? resolve(result.value) : cast(result.value).then(onfulfill, onreject);\n        }\n        step(\"next\", void 0);\n    });\n};\nimport { GithubUser, Repository, LanguageInformation, GithubEvent } from \"./github_model\";\nimport { deserializeAs, Deserializable } from \"./serialize\";\nlet axios = require('axios');\nimport * as _ from \"lodash\";\nexport class GithubError extends Deserializable {\n}\n__decorate([\n    deserializeAs(\"name\")\n], GithubError.prototype, \"name\", void 0);\n__decorate([\n    deserializeAs(\"message\")\n], GithubError.prototype, \"message\", void 0);\n__decorate([\n    deserializeAs(\"statusCode\")\n], GithubError.prototype, \"statusCode\", void 0);\n__decorate([\n    deserializeAs(\"headers\")\n], GithubError.prototype, \"headers\", void 0);\n__decorate([\n    deserializeAs(\"body\")\n], GithubError.prototype, \"body\", void 0);\nexport class GithubResponse {\n    constructor(headers, body) {\n        this.headers = headers;\n        this.body = body;\n    }\n    /**\n     * return null if failed to parse github pagination response\n     */\n    static parseLastLinkCount(link) {\n        if (typeof link === \"undefined\" ||\n            typeof link === null ||\n            typeof link !== \"string\")\n            return null;\n        if (link === \"rel=\\\"last\\\"\")\n            return null;\n        let lastLinkCount = null;\n        try {\n            let uriAndRels = link.split(\",\");\n            for (let i = 0; i < uriAndRels.length; i++) {\n                let splited = uriAndRels[i].split(\";\");\n                if (splited.length < 2)\n                    break; /** `rel= \"last\"` */\n                let rel = splited[1].trim();\n                if (rel === \"rel=\\\"last\\\"\") {\n                    let stringified = splited[0].split(\"&page=\")[1].trim();\n                    lastLinkCount = parseInt(stringified, 10);\n                    if (isNaN(lastLinkCount))\n                        lastLinkCount = null;\n                    break;\n                }\n            }\n        }\n        catch (err) {\n            return null;\n        }\n        return lastLinkCount;\n    }\n}\nexport class GithubUtil {\n    static getGithubResponse(token, uri) {\n        return __awaiter(this, void 0, Promise, function* () {\n            let r = new Promise((resolve, reject) => {\n                if (_.includes(uri, \"?\"))\n                    uri = `https://api.github.com${uri}&access_token=${token}`;\n                else\n                    uri = `https://api.github.com${uri}?access_token=${token}`;\n                axios.get(uri)\n                    .then(response => {\n                    return resolve(new GithubResponse(response.headers, response.data));\n                })\n                    .catch(response => {\n                    if (response instanceof Error)\n                        return reject(response);\n                    response.data.statusCode = response.status;\n                    return reject(response.data);\n                });\n            });\n            return r;\n        });\n    }\n    /** collect all API using pagination */\n    static getGithubResponses(token, uri) {\n        return __awaiter(this, void 0, Promise, function* () {\n            let responses = new Array();\n            let r = yield GithubUtil.getGithubResponse(token, uri);\n            responses.push(r);\n            let lastCount = GithubResponse.parseLastLinkCount(r.headers.link);\n            if (lastCount === null)\n                return responses;\n            let ps = new Array();\n            for (let i = 2; i <= lastCount; i++) {\n                ps.push(GithubUtil.getGithubResponse(token, `${uri}?page=${i}`));\n            }\n            let rs = yield Promise.all(ps);\n            let merged = responses.concat(rs);\n            return merged;\n        });\n    }\n    static getGithubResponseBody(token, uri) {\n        return __awaiter(this, void 0, Promise, function* () {\n            let r = yield GithubUtil.getGithubResponse(token, uri);\n            return r.body;\n        });\n    }\n    /**\n     * 1. retrieve page header\n     * 2. get all pages\n     * 3. return flattened\n     */\n    static getGithubResponsesBody(token, uri) {\n        return __awaiter(this, void 0, Promise, function* () {\n            let rs = yield GithubUtil.getGithubResponses(token, uri);\n            let bodies = rs.map(r => r.body); /* each body is an array */\n            let flattened = bodies.reduce((acc, body) => {\n                if (Array.isArray(body) && body.length > 0)\n                    return acc.concat(body);\n                else\n                    return acc;\n            });\n            return flattened;\n        });\n    }\n    static getGithubUser(token, user) {\n        return __awaiter(this, void 0, Promise, function* () {\n            let raw = yield GithubUtil.getGithubResponseBody(token, `/users/${user}`);\n            return GithubUser.deserialize(GithubUser, raw);\n        });\n    }\n    static getUserLanguages(token, user, ignoredRepos) {\n        return __awaiter(this, void 0, Promise, function* () {\n            let repos = yield GithubUtil.getUserRepositories(token, user);\n            let repoNames = repos\n                .map(r => r.name)\n                .filter(name => !_.contains(ignoredRepos, name)); /** filter out ignored repos */\n            if (repos.length === 0)\n                return new Array();\n            let ps = repoNames.map(name => {\n                return GithubUtil.getGithubResponseBody(token, `/repos/${user}/${name}/languages`)\n                    .then(langObject => {\n                    return {\n                        owner: user,\n                        repo_name: name,\n                        url: `http://github.com/${user}/${name}`,\n                        langObject: langObject\n                    };\n                });\n            });\n            let rawLangInfos = yield Promise.all(ps);\n            if (_.isEmpty(rawLangInfos))\n                return new Array();\n            let langInfos = rawLangInfos.map(rawLangInfo => {\n                return LanguageInformation.deserialize(LanguageInformation, rawLangInfo);\n            });\n            // TODO try-catch\n            // TODO filter empty array in languages\n            return langInfos;\n        });\n    }\n    static getUserRepositories(token, user) {\n        return __awaiter(this, void 0, Promise, function* () {\n            let raw = yield GithubUtil.getGithubResponsesBody(token, `/users/${user}/repos`);\n            let repos = Repository.deserializeArray(Repository, raw);\n            return repos;\n        });\n    }\n    static getUserActivities(token, user) {\n        return __awaiter(this, void 0, Promise, function* () {\n            let raw = yield GithubUtil.getGithubResponsesBody(token, `/users/${user}/events/public`);\n            let events = GithubEvent.deserializeGithubEvent(raw);\n            return events.filter(e => e !== null);\n        });\n    }\n}\n"],"sourceRoot":"/source/"}