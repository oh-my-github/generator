{"version":3,"sources":["generator/src/nodegit_util.js"],"names":[],"mappings":"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","file":"generator/src/nodegit_util.js","sourcesContent":["/// <reference path=\"../../typings/node/node.d.ts\" />\n/// <reference path=\"../../typings/lodash/lodash.d.ts\" />\n/// <reference path=\"../../typings/fs-extra/fs-extra.d.ts\" />\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, Promise, generator) {\n    return new Promise(function (resolve, reject) {\n        generator = generator.call(thisArg, _arguments);\n        function cast(value) { return value instanceof Promise && value.constructor === Promise ? value : new Promise(function (resolve) { resolve(value); }); }\n        function onfulfill(value) { try { step(\"next\", value); } catch (e) { reject(e); } }\n        function onreject(value) { try { step(\"throw\", value); } catch (e) { reject(e); } }\n        function step(verb, value) {\n            var result = generator[verb](value);\n            result.done ? resolve(result.value) : cast(result.value).then(onfulfill, onreject);\n        }\n        step(\"next\", void 0);\n    });\n};\nlet nodegit = require(\"nodegit\");\nimport { Log } from \"./util\";\nfunction nodegitLog(message) {\n    Log.blue(\"  Running Git Command: \", message);\n}\nexport function addAllAndCommit(path, user, commitMessage, initial) {\n    return __awaiter(this, void 0, Promise, function* () {\n        nodegitLog(`git commit -a -m \"${commitMessage}\"`);\n        let repo = yield nodegit.Repository.open(path);\n        let index = yield repo.openIndex();\n        yield index.addAll();\n        yield index.write();\n        let oid = yield index.writeTree();\n        var author = nodegit.Signature.now(user, user);\n        var committer = nodegit.Signature.now(user, user);\n        if (initial)\n            return yield repo.createCommit(\"HEAD\", author, committer, commitMessage, oid, []);\n        let head = yield nodegit.Reference.nameToId(repo, \"HEAD\");\n        let parent = yield repo.getCommit(head);\n        return yield repo.createCommit(\"HEAD\", author, committer, commitMessage, oid, [parent]);\n    });\n}\nexport function checkoutGhPagesBranch(path, user) {\n    return __awaiter(this, void 0, Promise, function* () {\n        let repo = undefined;\n        /** initialize repository if not exist */\n        try {\n            repo = yield nodegit.Repository.open(path);\n        }\n        catch (error) {\n            nodegitLog(\"git init\");\n            repo = yield nodegit.Repository.init(path, 0);\n        }\n        let branch = undefined;\n        /** do initial commit if not exist */\n        try {\n            branch = yield repo.getCurrentBranch();\n        }\n        catch (error) {\n            yield addAllAndCommit(path, user, \"initial commit\", true);\n            repo = yield nodegit.Repository.open(path);\n            branch = yield repo.getCurrentBranch();\n        }\n        /** lookup gh-pages branch and create it if not exists */\n        try {\n            let ghPagesBranch = yield repo.getBranch(\"gh-pages\");\n        }\n        catch (error) {\n            nodegitLog(\"git branch gh-pages HEAD\");\n            let headCommit = yield repo.getHeadCommit();\n            yield repo.createBranch(\"gh-pages\", headCommit, 0, repo.defaultSignature(), \"message\");\n        }\n        /** checkout gh-pages */\n        let branchName = branch.name();\n        if (!branchName.endsWith(\"/gh-pages\")) {\n            nodegitLog(\"git checkout gh-pages\");\n            repo = yield nodegit.Repository.open(path);\n            return yield repo.checkoutBranch(\"gh-pages\", {\n                checkoutStrategy: nodegit.Checkout.STRATEGY.SAFE | nodegit.Checkout.STRATEGY.RECREATE_MISSING\n            });\n        }\n        return yield Promise.resolve();\n    });\n}\n/**\n * branchName: e.g 'gh-pages'\n * remoteName: e.g 'origin'\n * gitUrl: e.g 'git@github.com:1ambda/oh-my-github'\n */\nexport function push(path, branchName, remoteName, gitUrl) {\n    return __awaiter(this, void 0, Promise, function* () {\n        let repo = yield nodegit.Repository.open(path);\n        let remote = undefined;\n        try {\n            remote = yield nodegit.Remote.lookup(repo, remoteName);\n        }\n        catch (error) {\n            nodegitLog(`git remote add ${remoteName} ${nodegit.rl}`);\n            remote = yield nodegit.Remote.create(repo, remoteName, gitUrl);\n        }\n        nodegitLog(`git push origin ${branchName}:${branchName} --force`);\n        return yield remote.push([`+refs/heads/${branchName}:refs/heads/${branchName}`], { callbacks: {\n                credentials: function (url, userName) {\n                    return nodegit.Cred.sshKeyFromAgent(userName);\n                }\n            } });\n    });\n}\nexport function publish(user, repoName) {\n    return __awaiter(this, void 0, Promise, function* () {\n        let path = process.cwd();\n        let branchName = \"gh-pages\";\n        let remoteName = \"origin\";\n        let gitUrl = `git@github.com:${user}/${repoName}`;\n        let commitMessage = `Update profile (${(new Date).toISOString()})`;\n        yield checkoutGhPagesBranch(path, user);\n        yield addAllAndCommit(path, user, commitMessage, false);\n        yield push(path, branchName, remoteName, gitUrl);\n    });\n}\n"],"sourceRoot":"/source/"}